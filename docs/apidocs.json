{"openapi":"3.0.0","info":{"version":"1.0.0","title":"Empauwer Backend API documenations","description":"# Introduction\nThis API is documented in **OpenAPI 3.0 format**. \\\nSee https://redocly.github.io/redoc/ for more information.\n"},"servers":[{"url":"http://localhost:4585/em/api/v1","description":"Local development"},{"url":"https://empstag.x0pa.ai/em/api/v1/","description":"Staging environment"}],"tags":[{"name":"User","description":"Information about the User(s)"},{"name":"Company","description":"Information about the Company API(s)"},{"name":"Job","description":"Information about Job(s)"},{"name":"Application","description":"Information about Job and Application Access(es)"},{"name":"Access","description":"Information about Job and Application Access(es)"},{"name":"Onboarding","description":"Information about Job and Application Access(es)"},{"name":"Mentor","description":"Information about Mentor API(s)"},{"name":"Email","description":"Information about Email API(s)"},{"name":"Nylas","description":"Information about Nylas API(s)"},{"name":"User Model","x-displayName":"The User Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/User\" />\n"},{"name":"Question Model","x-displayName":"The Question Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/Question\" />\n"},{"name":"Answer Model","x-displayName":"The Answer Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/answers\" />\n"},{"name":"Job Model","x-displayName":"The Job Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/job\" />\n"},{"name":"Detailed Job Model","x-displayName":"The Detailed Job Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/jobDetailed\" />\n"},{"name":"Job Application Model","x-displayName":"The Job Application Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/jobApplication\" />\n"},{"name":"Detailed Job Application Model","x-displayName":"The Detailed Job Application Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/jobApplicationDetailed\" />\n"}],"paths":{"/login":{"post":{"summary":"Login user","tags":["User"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string","example":"me@mymail.com"},"password":{"type":"string","example":"password"},"captcha":{"type":"string"},"rememberMe":{"type":"boolean"}}}}}},"responses":{"200":{"description":"Successful login","content":{"application/json":{"schema":{"type":"object","properties":{"User":{"type":"object","allOf":[{"$ref":"#/components/schemas/User"}],"properties":{"isOnboardingComplete":{"type":"boolean"},"isCompanyOnboardingComplete":{"type":"boolean"},"leadershipMessage":{"type":"string"}}},"token":{"type":"string","description":"JWT to be used for authorization"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/login',\n  headers: {'content-type': 'application/json'},\n  body: {\n    email: 'me@mymail.com',\n    password: 'password',\n    captcha: 'string',\n    rememberMe: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/logout":{"post":{"summary":"Logout user","tags":["User"],"responses":{"200":{"description":"Successful logout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","example":"Log out successful!"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {method: 'POST', url: 'http://localhost:4585/em/api/v1/logout'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account":{"post":{"summary":"Create User","tags":["User"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string","example":"me@mymail.com"},"password":{"type":"string","example":"password"},"accountType":{"type":"string","enum":["candidate"]},"privacyClause":{"type":"boolean"},"tandc":{"type":"boolean"}}}}}},"responses":{"201":{"description":"User successfully created","content":{"application/json":{"schema":{"type":"object","properties":{"userUuid":{"type":"string"},"userId":{"type":"number"},"email":{"type":"string"}}}}}},"400":{"description":"Failed to create user","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"boolean"},"message":{"description":"Describes reason for failure","type":"string"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/account',\n  headers: {'content-type': 'application/json'},\n  body: {\n    email: 'me@mymail.com',\n    password: 'password',\n    accountType: 'candidate',\n    privacyClause: true,\n    tandc: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/superadmin/company-superadmin":{"post":{"summary":"Create Company Superadmin","tags":["User"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"companyName":{"type":"string"},"email":{"type":"string","example":"me@mymail.com"},"password":{"type":"string","example":"password"}}}}}},"responses":{"201":{"description":"Company Superadmin successfully created","content":{"application/json":{"schema":{"type":"object","properties":{"userUuid":{"type":"string"},"userId":{"type":"number"},"email":{"type":"string"}}}}}},"400":{"description":"Failed to create user","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"boolean"},"message":{"description":"Describes reason for failure","type":"string"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/account/superadmin/company-superadmin',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {companyName: 'string', email: 'me@mymail.com', password: 'password'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/superadmin/companies?limit={limit}&offset={skip}&search={searchTEXT}&industryId={industryId}&sort={sort}":{"get":{"summary":"Get all companies by Superadmin","tags":["User"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["company_name:asc","company_name:desc","created_at:asc","created_at:desc"]}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"count":{"type":"number"},"companies":{"type":"array","items":{"$ref":"#/components/schemas/CompanyFullDetails"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/account/superadmin/companies',\n  qs: {\n    sort: '{sort}',\n    limit: '{limit}',\n    offset: '{skip}',\n    search: '{searchTEXT}',\n    industryId: '{industryId}'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/superadmin/company/{companyUuid}":{"patch":{"summary":"Update/(Re/De)-activate any Company","tags":["User"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"active":{"type":"boolean"}}}}}},"responses":{"201":{"description":"Company successfully updated","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/Company"}}}},"400":{"description":"Failed to update company","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"boolean"},"message":{"description":"Describes reason for failure","type":"string"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/account/superadmin/company/%7BcompanyUuid%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {active: true},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/superadmin/users?limit={limit}&offset={skip}&search={searchTEXT}&userType={userType}&companyId={companyId}&sort={sort}":{"get":{"summary":"Get all users","tags":["User"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"userType","in":"query","required":false,"schema":{"type":"string","enum":["candidate","employer","supervisor","workbuddy","supportstaff","leadership","companysuperadmin","superadmin"]}},{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["company_name:asc","company_name:desc","first_name:asc","first_name:desc","last_name:asc","last_name:desc"]}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"count":{"type":"number"},"users":{"type":"array","items":{"$ref":"#/components/schemas/companyUser"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/account/superadmin/users',\n  qs: {\n    userType: '{userType}',\n    sort: '{sort}',\n    limit: '{limit}',\n    offset: '{skip}',\n    search: '{searchTEXT}',\n    companyId: '{companyId}'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/superadmin/user/{userUuid}":{"patch":{"summary":"Update/(Re/De)-activate any User","tags":["User"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"active":{"type":"boolean"}}}}}},"responses":{"201":{"description":"User successfully updated","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/User"}}}},"400":{"description":"Failed to update user","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"boolean"},"message":{"description":"Describes reason for failure","type":"string"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/account/superadmin/user/%7BuserUuid%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {active: true},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/botuser/{userUuid}":{"get":{"summary":"Get bot user info","security":[{"bearerAuth":[]}],"tags":["User"],"responses":{"200":{"description":"Successfully get bot user information","content":{"application/json":{"schema":{"type":"object","properties":{"firstName":{"type":"string"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/account/botuser/%7BuserUuid%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/me":{"get":{"summary":"Get user info","security":[{"bearerAuth":[]}],"tags":["User"],"responses":{"200":{"description":"Successfully get user information","content":{"application/json":{"schema":{"type":"object","allOf":[{"$ref":"#/components/schemas/User"}],"properties":{"isCompanyOnboardingComplete":{"type":"boolean"},"isOnboardingComplete":{"type":"boolean"},"leadershipMessage":{"type":"string"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/account/me',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/resources":{"get":{"summary":"Get Resources for a user","security":[{"bearerAuth":[]}],"tags":["User"],"responses":{"200":{"description":"Successfully get user resources","content":{"application/json":{"schema":{"type":"object","properties":{"resources":{"type":"array","items":{"type":"object","$ref":"#/components/schemas/Resource"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/account/resources',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/me/meta/all?exclude={metaKey}":{"get":{"summary":"Get user's all meta data","security":[{"bearerAuth":[]}],"tags":["User"],"responses":{"200":{"description":"Successfully get user's all meta data information","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/allMeta"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/account/me/meta/all',\n  qs: {exclude: '{metaKey}'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/me/meta?metaKey={metaKey}":{"get":{"summary":"Get user's meta data","security":[{"bearerAuth":[]}],"tags":["User"],"responses":{"200":{"description":"Successfully get user's meta data information","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/meta"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/account/me/meta',\n  qs: {metaKey: '{metaKey}'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/me/meta":{"patch":{"summary":"Update or Create user's meta data info","parameters":[{"name":"userUuid","in":"path","description":"UUID of User","required":true,"schema":{"type":"string"}}],"security":[{"bearerAuth":[]}],"tags":["User"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"metaKey":{"type":"string"},"metaValue":{"type":"string"}}}}}},"responses":{"200":{"description":"Successfully updated user's meta data info","content":{"application/json":{"schema":{"$ref":"#/components/schemas/meta"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/account/me/meta',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {metaKey: 'string', metaValue: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/{userUuid}/":{"patch":{"summary":"Update user info","parameters":[{"name":"userUuid","in":"path","description":"UUID of User","required":true,"schema":{"type":"string"}}],"security":[{"bearerAuth":[]}],"tags":["User"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"picture":{"type":"file"},"active":{"type":"boolean","nullable":true},"firstName":{"type":"string","nullable":true},"lastName":{"type":"string","nullable":true},"isAdmin":{"type":"boolean","nullable":true},"tzid":{"type":"number","nullable":true},"primaryMobile":{"type":"string","nullable":true},"roleId":{"type":"number","nullable":true},"privacyClause":{"type":"boolean"},"tandc":{"type":"boolean"}}}}}},"responses":{"200":{"description":"Successfully updated user info","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/account/%7BuserUuid%7D/',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {\n    picture: null,\n    active: true,\n    firstName: 'string',\n    lastName: 'string',\n    isAdmin: true,\n    tzid: 0,\n    primaryMobile: 'string',\n    roleId: 0,\n    privacyClause: true,\n    tandc: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/update-password/":{"patch":{"summary":"Update user password","security":[{"bearerAuth":[]}],"tags":["User"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"oldPassword":{"type":"string"},"password":{"type":"string"}}}}}},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","example":"Password updation successful"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/account/update-password/',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {oldPassword: 'string', password: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/superadmin/resend-verify":{"post":{"summary":"Resend Verification Email to a User by Superadmin","security":[{"bearerAuth":[]}],"tags":["User"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"userId":{"type":"number"}}}}}},"responses":{"200":{"description":"Successfully resend verification email","content":{"application/json":{"schema":{"properties":{"message":{"type":"string","example":"We've emailed him/her instructions for verifying his/her account. He/She should receive them shortly. If he/she doesn't receive an email, please make sure he/she checked his/her spam folder."}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/account/superadmin/resend-verify',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {userId: 0},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/verify/{emailVerificationToken}":{"patch":{"summary":"Verify Email","tags":["User"],"parameters":[{"name":"emailVerificationToken","in":"path","description":"Email verification token from ?","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"isEmailVerified":{"type":"boolean"}}}}}},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","example":"Email Verification successful"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/account/verify/%7BemailVerificationToken%7D',\n  headers: {'content-type': 'application/json'},\n  body: {isEmailVerified: true},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/forgot-password":{"post":{"summary":"Forgot user password","tags":["User"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string"}}}}}},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"properties":{"message":{"type":"string","example":"We've emailed you instructions for resetting your password, if an account exists with the email you entered. You should receive them shortly. If you don't receive an email, please make sure you've entered the address you registered with, and check your spam folder."}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/account/forgot-password',\n  headers: {'content-type': 'application/json'},\n  body: {email: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/reset-password/{passwordResetToken}":{"patch":{"summary":"Reset password","tags":["User"],"parameters":[{"name":"passwordResetToken","in":"path","description":"Password reset token from ?","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"password1":{"type":"string"},"password2":{"type":"string"}}}}}},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","example":"Password updation successful"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/account/reset-password/%7BpasswordResetToken%7D',\n  headers: {'content-type': 'application/json'},\n  body: {password1: 'string', password2: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/empauwer-me":{"get":{"summary":"Get Empauwer Me Questionnaire","tags":["User"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"questions":{"type":"array","items":{"$ref":"#/components/schemas/Question"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/account/empauwer-me',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/empauwer-us-mentor":{"get":{"summary":"Get Empauwer Us Mentor Questionnaire","tags":["User"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"questions":{"type":"array","items":{"$ref":"#/components/schemas/Question"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/account/empauwer-us-mentor',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/empauwer-us-admin":{"get":{"summary":"Get Empauwer Us Admin Questionnaire","tags":["User"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"questions":{"type":"array","items":{"$ref":"#/components/schemas/Question"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/account/empauwer-us-admin',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/empauwer-all":{"get":{"summary":"Get Empauwer All Questionnaire","tags":["User"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"questions":{"type":"array","items":{"$ref":"#/components/schemas/Question"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/account/empauwer-all',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/profile":{"post":{"summary":"Create profile/Answer Questions","tags":["User"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/answers"}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"isComplete":{"type":"boolean"},"responses":{"type":"array","items":{"$ref":"#/components/schemas/answers"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/account/profile',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: [{questionId: 0, answer: 0, timeTaken: 0}],\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]},"get":{"summary":"Get profile/Answered Questions","tags":["User"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"isComplete":{"type":"boolean"},"responses":{"type":"array","items":{"$ref":"#/components/schemas/answers"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/account/profile',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/feedback":{"post":{"summary":"Save User feedback","tags":["User"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"positiveFeedback":{"type":"string"},"negativeFeedback":{"type":"string"}}}}}},"responses":{"201":{"description":"User feedback successfully saved","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","example":"Feedback successfully saved!"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/account/feedback',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {positiveFeedback: 'string', negativeFeedback: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/c/options":{"get":{"summary":"Get company options","tags":["Company"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"industry":{"type":"array","items":{"type":"object","properties":{"companyIndustryId":{"type":"number"},"companyIndustryName":{"type":"string"}}}},"country":{"type":"array","items":{"type":"object","properties":{"countryId":{"type":"number"},"companyCode":{"type":"string"},"countryShort":{"type":"string"},"countryFull":{"type":"string"}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/company/c/options',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/c/names":{"get":{"summary":"Get all company names with ids","tags":["Company"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"companies":{"type":"array","items":{"type":"object","properties":{"companyId":{"type":"number"},"companyName":{"type":"string"}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/company/c/names',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/c/profile":{"get":{"summary":"Get own Company info","security":[{"bearerAuth":[]}],"tags":["Company"],"responses":{"200":{"description":"Successfully retrived own Company info","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompanyFullDetails"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/company/c/profile',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/c/visit-count":{"get":{"summary":"Get Company visit count","tags":["Company"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"startDate","in":"query","required":false,"schema":{"type":"string","example":"2020-02-25"}},{"name":"endDate","in":"query","required":false,"schema":{"type":"string","example":"2021-02-25"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"companyVisitCount":{"type":"number"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/company/c/visit-count',\n  qs: {startDate: '2020-02-25', endDate: '2021-02-25'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/c/work-accommodations":{"get":{"summary":"Get Company work accommodations","tags":["Company"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"workAccommodations":{"type":"array","items":{"type":"object","properties":{"companyVisitCount":{"type":"number"},"workaccommodationTitle":{"type":"string"},"workaccommodationDescription":{"type":"string"},"companyWorkaccommodationId":{"type":"number"},"companyId":{"type":"number"},"status":{"type":"string"}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/company/c/work-accommodations',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/c/work-accommodation/{companyWorkaccommodationId}":{"patch":{"summary":"Update Company Work accommodation status","parameters":[{"name":"companyWorkaccommodationId","in":"path","description":"ID of CompanyWorkAccommodation","required":true,"schema":{"type":"string"}}],"security":[{"bearerAuth":[]}],"tags":["Company"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","enum":["complete","in progress","not applicable"]}}}}}},"responses":{"200":{"description":"Successfully updated Company Work Accommodation status","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompanyWorkAccommodation"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/company/c/work-accommodation/%7BcompanyWorkaccommodationId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {status: 'complete'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/{companyId}/":{"get":{"summary":"Get any Company info","parameters":[{"name":"companyId","in":"path","description":"ID of Company","required":true,"schema":{"type":"string"}}],"security":[{"bearerAuth":[]}],"tags":["Company"],"responses":{"200":{"description":"Successfully retrived Company info","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompanyFullDetails"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/company/%7BcompanyId%7D/',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/{companyUuid}/":{"patch":{"summary":"Update Company info","parameters":[{"name":"companyUuid","in":"path","description":"UUID of Company","required":true,"schema":{"type":"string"}}],"security":[{"bearerAuth":[]}],"tags":["Company"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"companyName":{"type":"string"},"displayName":{"type":"string"},"website":{"type":"string"},"description":{"type":"string"},"supervisorRandR":{"type":"string"},"workbuddyRandR":{"type":"string"},"active":{"type":"boolean"},"isCompanyOnboardingComplete":{"type":"boolean"},"noOfEmployees":{"type":"number"},"foundedYear":{"type":"number"},"companyIndustryId":{"type":"number"},"logo":{"type":"file"},"banner":{"type":"file"},"emailBg":{"type":"string"}}}}}},"responses":{"200":{"description":"Successfully updated Company info","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompanyFullDetails"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/company/%7BcompanyUuid%7D/',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {\n    companyName: 'string',\n    displayName: 'string',\n    website: 'string',\n    description: 'string',\n    supervisorRandR: 'string',\n    workbuddyRandR: 'string',\n    active: true,\n    isCompanyOnboardingComplete: true,\n    noOfEmployees: 0,\n    foundedYear: 0,\n    companyIndustryId: 0,\n    logo: null,\n    banner: null,\n    emailBg: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/c/staff?limit={limit}&offset={skip}&search={searchTEXT}&userType={userType}&excludeUserType={excludeUserType}&sort={sort}":{"get":{"summary":"Get all company staff","tags":["Company"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"userType","in":"query","required":false,"schema":{"type":"string","enum":["employer","supervisor","workbuddy","supportstaff","leadership","companysuperadmin"]}},{"name":"excludeUserType","in":"query","required":false,"schema":{"type":"string","enum":["employer","supervisor","workbuddy","supportstaff","leadership","companysuperadmin"]}},{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["first_name:asc","first_name:desc","last_name:asc","last_name:desc"]}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"count":{"type":"number"},"staff":{"type":"array","items":{"$ref":"#/components/schemas/companyUser"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/company/c/staff',\n  qs: {\n    userType: '{userType}',\n    excludeUserType: '{excludeUserType}',\n    sort: '{sort}',\n    limit: '{limit}',\n    offset: '{skip}',\n    search: '{searchTEXT}'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/c/staff/{userUuid}":{"post":{"summary":"Create Company Staff","tags":["Company"],"parameters":[{"name":"userUuid","in":"path","description":"UUID of User","required":true,"schema":{"type":"string"}}],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string","example":"me@mymail.com"},"password":{"type":"string","example":"password"},"accountType":{"type":"string","enum":["employer","supervisor","workbuddy","companysuperadmin","supportstaff","leadership"]}}}}}},"responses":{"201":{"description":"Recruiter/Mentor/CompanySuperadmin successfully created","content":{"application/json":{"schema":{"type":"object","properties":{"userUuid":{"type":"string"},"userId":{"type":"number"},"email":{"type":"string"}}}}}},"400":{"description":"Failed to create user","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"boolean"},"message":{"description":"Describes reason for failure","type":"string"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/company/c/staff/%7BuserUuid%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {email: 'me@mymail.com', password: 'password', accountType: 'employer'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]},"patch":{"summary":"Update Company Staff","tags":["Company"],"parameters":[{"name":"userUuid","in":"path","description":"UUID of User","required":true,"schema":{"type":"string"}}],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string"},"password":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"active":{"type":"boolean"},"userType":{"type":"string","enum":["employer","supervisor","workbuddy","supportstaff","leadership","companysuperadmin"]}}}}}},"responses":{"201":{"description":"Company Staff successfully updated","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/User"}}}},"400":{"description":"Failed to update user","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"boolean"},"message":{"description":"Describes reason for failure","type":"string"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/company/c/staff/%7BuserUuid%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {\n    email: 'string',\n    password: 'string',\n    firstName: 'string',\n    lastName: 'string',\n    active: true,\n    userType: 'employer'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/c/fellow-staff?search={searchTEXT}&userType={userType}&sort={sort}&exclude={excludeUserId}":{"get":{"summary":"Get all fellow company staff","tags":["Company"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"userType","in":"query","required":false,"schema":{"type":"string","enum":["employer","supervisor","workbuddy","supportstaff","leadership"]}},{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["first_name:asc","first_name:desc","last_name:asc","last_name:desc"]}},{"name":"exclude","description":"userId to exclude","in":"query","required":false,"schema":{"type":"string","example":143}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"staff":{"type":"array","items":{"type":"object","properties":{"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"userId":{"type":"number"},"roleName":{"type":"string"},"userTypeName":{"type":"string"}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/company/c/fellow-staff',\n  qs: {\n    userType: '{userType}',\n    sort: '{sort}',\n    exclude: '{excludeUserId}',\n    search: '{searchTEXT}'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/c/resend-verify":{"post":{"summary":"Resend Verification Email to new Company Staff","security":[{"bearerAuth":[]}],"tags":["Company"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"userId":{"type":"number"}}}}}},"responses":{"200":{"description":"Successfully resend verification email","content":{"application/json":{"schema":{"properties":{"message":{"type":"string","example":"We've emailed him/her instructions for verifying his/her account. He/She should receive them shortly. If he/she doesn't receive an email, please make sure he/she checked his/her spam folder."}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/company/c/resend-verify',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {userId: 0},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/jobs/{companyId}?limit={limit}&offset={skip}&search={searchString}&sort=created_at:desc&jobTypeId=1&jobFunctionId=1&jobIndustryId=1&jobLocationId=1&minExp=1&startDate={lowerDate}&endDate={upperDate}":{"get":{"summary":"Get all Open jobs of a company","tags":["Company"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["created_at:asc","created_at:desc","job_name:asc","job_name:desc"]}},{"name":"startDate","in":"query","required":false,"schema":{"type":"string","example":"2020-02-25"}},{"name":"endDate","in":"query","required":false,"schema":{"type":"string","example":"2021-02-25"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/paginatedAllJobs"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/company/jobs/%7BcompanyId%7D',\n  qs: {\n    sort: 'created_at:desc',\n    startDate: '{lowerDate}',\n    endDate: '{upperDate}',\n    limit: '{limit}',\n    offset: '{skip}',\n    search: '{searchString}',\n    jobTypeId: '1',\n    jobFunctionId: '1',\n    jobIndustryId: '1',\n    jobLocationId: '1',\n    minExp: '1'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/company/job/{jobUuid}":{"get":{"summary":"Get Company Job details by uuid","tags":["Company"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"jobUuid","in":"path","description":"UUID of job","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/candidateJobDetails"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/company/job/%7BjobUuid%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job?limit={limit}&offset={skip}&recommended={1}&search={searchString}&sort=created_at:desc&jobTypeId=1&jobFunctionId=1&jobIndustryId=1&jobLocationId=1&minExp=1&startDate={lowerDate}&endDate={upperDate}":{"post":{"summary":"Create Job","tags":["Job"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"jobName":{"type":"string"},"jobDescription":{"type":"string"},"jobIndustryId":{"type":"number"},"jobFunctionId":{"type":"number"},"jobTypeId":{"type":"number"},"jobLocationId":{"type":"number"},"minExp":{"type":"number"},"duration":{"type":"number"},"closeDate":{"type":"string","example":"2027-12-27"},"isPrivate":{"type":"boolean"},"isDeleted":{"type":"boolean"},"jobSkills":{"type":"array","items":{"type":"string"}}}}}}},"responses":{"201":{"description":"Job created","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/jobDetailed"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/job',\n  qs: {\n    limit: '{limit}',\n    offset: '{skip}',\n    recommended: '{1}',\n    search: '{searchString}',\n    sort: 'created_at:desc',\n    jobTypeId: '1',\n    jobFunctionId: '1',\n    jobIndustryId: '1',\n    jobLocationId: '1',\n    minExp: '1',\n    startDate: '{lowerDate}',\n    endDate: '{upperDate}'\n  },\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {\n    jobName: 'string',\n    jobDescription: 'string',\n    jobIndustryId: 0,\n    jobFunctionId: 0,\n    jobTypeId: 0,\n    jobLocationId: 0,\n    minExp: 0,\n    duration: 0,\n    closeDate: '2027-12-27',\n    isPrivate: true,\n    isDeleted: true,\n    jobSkills: ['string']\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]},"get":{"summary":"Get jobs","tags":["Job"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"recommended","in":"query","required":false,"schema":{"type":"number","enum":[1,0]}},{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["score:asc","score:desc","created_at:asc","created_at:desc","job_name:asc","job_name:desc"]}},{"name":"startDate","in":"query","required":false,"schema":{"type":"string","example":"2020-02-25"}},{"name":"endDate","in":"query","required":false,"schema":{"type":"string","example":"2021-02-25"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/paginatedAllJobs"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job',\n  qs: {\n    recommended: '{1}',\n    sort: 'created_at:desc',\n    startDate: '{lowerDate}',\n    endDate: '{upperDate}',\n    limit: '{limit}',\n    offset: '{skip}',\n    search: '{searchString}',\n    jobTypeId: '1',\n    jobFunctionId: '1',\n    jobIndustryId: '1',\n    jobLocationId: '1',\n    minExp: '1'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/j/deleted?limit={limit}&offset={skip}&search={searchString}&jobId={jobId}&companyId={companyId}&sort=created_at:desc&createdStartDate={lowerDate}&createdEndDate={upperDate}&deletedStartDate={lowerDate}&deletedEndDate={upperDate}":{"get":{"summary":"Get all deleted jobs","tags":["Job"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["created_at:asc","created_at:desc","deleted_at:asc","deleted_at:desc","job_name:asc","job_name:desc","company_name:asc","company_name:desc"]}},{"name":"createdStartDate","in":"query","required":false,"schema":{"type":"string","example":"2020-02-25"}},{"name":"createdEndDate","in":"query","required":false,"schema":{"type":"string","example":"2021-02-25"}},{"name":"deletedStartDate","in":"query","required":false,"schema":{"type":"string","example":"2020-02-25"}},{"name":"deletedEndDate","in":"query","required":false,"schema":{"type":"string","example":"2021-02-25"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"count":{"type":"number"},"jobs":{"type":"array","items":null,"$ref":"#/components/schemas/jobFullDetailed"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/j/deleted',\n  qs: {\n    sort: 'created_at:desc',\n    createdStartDate: '{lowerDate}',\n    createdEndDate: '{upperDate}',\n    deletedStartDate: '{lowerDate}',\n    deletedEndDate: '{upperDate}',\n    limit: '{limit}',\n    offset: '{skip}',\n    search: '{searchString}',\n    jobId: '{jobId}',\n    companyId: '{companyId}'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/j/auto-complete?type={type}&search={searchTEXT}":{"get":{"summary":"Get job autocompletes","tags":["Job"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"type","in":"query","required":true,"schema":{"type":"string","enum":["jobName","jobIndustry","jobFunction","countryName"]}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"count":{"type":"number"},"autoCompletes":{"type":"array","items":{"type":"object","properties":{"countryId/job?????Id":{"type":"number"},"countryFull/job?????Name":{"type":"string"}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/j/auto-complete',\n  qs: {type: '{type}', search: '{searchTEXT}'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/j/options":{"get":{"summary":"Get job details options","tags":["Job"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"function":{"type":"array","items":{"type":"object","properties":{"jobFunctionId":{"type":"number"},"jobFunctionName":{"type":"string"}}}},"industry":{"type":"array","items":{"type":"object","properties":{"jobIndustryId":{"type":"number"},"jobIndustryName":{"type":"string"}}}},"location":{"type":"array","items":{"type":"object","properties":{"jobLocationId":{"type":"number"},"jobLocationName":{"type":"string"}}}},"type":{"type":"array","items":{"type":"object","properties":{"jobTypeId":{"type":"number"},"jobTypeName":{"type":"string"}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/j/options',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/j/top-visited":{"get":{"summary":"Get top 5 visited jobs","tags":["Job"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"jobs":{"type":"array","items":{"type":"object","properties":{"jobId":{"type":"number"},"jobName":{"type":"string"},"visitCount":{"type":"number"}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/j/top-visited',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/j/visit-count/{jobId}":{"get":{"summary":"Get Job visit count","tags":["Job"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"jobId","in":"path","required":true,"schema":{"type":"number"}},{"name":"startDate","in":"query","required":false,"schema":{"type":"string","example":"2020-02-25"}},{"name":"endDate","in":"query","required":false,"schema":{"type":"string","example":"2021-02-25"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"jobVisitCount":{"type":"number"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/j/visit-count/%7BjobId%7D',\n  qs: {startDate: '2020-02-25', endDate: '2021-02-25'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/{jobUuid}":{"get":{"summary":"Get job by uuid","tags":["Job"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"jobUuid","in":"path","description":"UUID of job","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/jobFullDetailsWithQuesRes"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/%7BjobUuid%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]},"patch":{"summary":"Update job by uuid","tags":["Job"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"jobUuid","in":"path","description":"UUID of job","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/job"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/jobDetailed"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/job/%7BjobUuid%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {\n    jobName: 'string',\n    jobDescription: 'string',\n    jobIndustryId: 0,\n    jobFunctionId: 0,\n    jobTypeId: 0,\n    jobLocationId: 0,\n    jobskillIds: [0],\n    minExp: 0,\n    duration: 0,\n    closeDate: '2027-12-27',\n    isPrivate: true,\n    isDeleted: true,\n    deletedAt: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]},"delete":{"summary":"Delete job by uuid","tags":["Job"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"jobUuid","in":"path","description":"UUID of job","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","example":"Job deletion successful"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'http://localhost:4585/em/api/v1/job/%7BjobUuid%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/j/restore":{"patch":{"summary":"Restore a deleted job","description":"This restores a deleted job. Only if it was deleted less than 2 years ago","tags":["Job"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"jobId":{"type":"number"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/jobDetailed"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/job/j/restore',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {jobId: 0},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/access/share-job/{jobId}":{"get":{"summary":"Get Job Access Records","tags":["Access"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"jobId","in":"path","description":"jobId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"accessRecords":{"type":"array","items":{"type":"object","allOf":[{"$ref":"#/components/schemas/jobShared"}],"properties":{"firstName":{"type":"string"},"email":{"type":"string"}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/access/share-job/%7BjobId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]},"post":{"summary":"Share Job","tags":["Access"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"accessLevel":{"type":"string","enum":["viewer","administrator"]},"userId":{"type":"string","example":"182"}}}}}},"responses":{"201":{"description":"Job shared","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/jobShared"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/job/access/share-job/%7BjobId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {accessLevel: 'viewer', userId: '182'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]},"patch":{"summary":"Update Shared Job","tags":["Access"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"jobId","in":"path","description":"jobId","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"accessLevel":{"type":"string","enum":["viewer","administrator"]},"userId":{"type":"string","example":"182"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/jobShared"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/job/access/share-job/%7BjobId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {accessLevel: 'viewer', userId: '182'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]},"delete":{"summary":"Delete Job Access Record","tags":["Access"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"jobId","in":"path","description":"jobId","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"userId":{"type":"string","example":"182"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","example":"Access record deleted"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'http://localhost:4585/em/api/v1/job/access/share-job/%7BjobId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {userId: '182'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/j/recruiter?limit={limit}&offset={skip}&ownJobs={1}&search={searchString}&startDate={lowerDate}&endDate={upperDate}&sort=created_at:desc&jobTypeId=1&jobFunctionId=1&jobIndustryId=1&jobLocationId=1&minExp=1":{"get":{"summary":"Get recruiter jobs","tags":["Job"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"ownJobs","in":"query","required":false,"schema":{"type":"number","enum":[1,0]}},{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["score:asc","score:desc","created_at:asc","created_at:desc","job_name:asc","job_name:desc"]}},{"name":"startDate","in":"query","required":false,"schema":{"type":"string","example":"2020-02-25"}},{"name":"endDate","in":"query","required":false,"schema":{"type":"string","example":"2021-02-25"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/paginatedRecruiterJobs"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/j/recruiter',\n  qs: {\n    ownJobs: '{1}',\n    sort: 'created_at:desc',\n    startDate: '{lowerDate}',\n    endDate: '{upperDate}',\n    limit: '{limit}',\n    offset: '{skip}',\n    search: '{searchString}',\n    jobTypeId: '1',\n    jobFunctionId: '1',\n    jobIndustryId: '1',\n    jobLocationId: '1',\n    minExp: '1'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/profile/{jobId}":{"get":{"summary":"Get empauwer all responses","tags":["Job"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"responses":{"type":"array","items":{"$ref":"#/components/schemas/answers"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/profile/%7BjobId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]},"post":{"summary":"Answer empauwer all responses","description":"This is an upsert command hence it will update/insert responses.","tags":["Job"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/answers"}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"responses":{"type":"array","items":{"$ref":"#/components/schemas/answers"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/job/profile/%7BjobId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: [{questionId: 0, answer: 0, timeTaken: 0}],\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/application/applied?limit={limit}&offset={skip}&search={searchTEXT}&sort=created_at:desc&status={status}&exclude={excludeStatus}&startDate={lowerDate}&endDate={upperDate}":{"get":{"summary":"Get applied jobs","tags":["Application"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"status","in":"query","required":false,"schema":{"type":"string","enum":["applied","withdrawn","shortlisted","interview","closed","offer","hired"]}},{"name":"exclude","in":"query","required":false,"schema":{"type":"string","enum":["applied","withdrawn","shortlisted","interview","closed","offer","hired"]}},{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["created_at:asc","created_at:desc","status:asc","status:desc","job_name:asc","job_name:desc","last_status_updated:asc","last_status_updated:desc"]}},{"name":"startDate","in":"query","required":false,"schema":{"type":"string","example":"2020-02-25"}},{"name":"endDate","in":"query","required":false,"schema":{"type":"string","example":"2021-02-25"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"count":{"type":"number"},"appliedJobs":{"type":"array","items":{"$ref":"#/components/schemas/jobApplicationDetailed"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/application/applied',\n  qs: {\n    status: '{status}',\n    exclude: '{excludeStatus}',\n    sort: 'created_at:desc',\n    startDate: '{lowerDate}',\n    endDate: '{upperDate}',\n    limit: '{limit}',\n    offset: '{skip}',\n    search: '{searchTEXT}'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/application/apply":{"post":{"summary":"Apply to jobs","description":"This is an upsert command hence it will update/insert jobs.","tags":["Application"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"jobId":{"type":"number"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/jobApplication"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/job/application/apply',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {jobId: 0},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/application/withdraw":{"patch":{"summary":"Withdraw from an Applied Job","tags":["Application"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"jobId":{"type":"string","example":"1"}}}}}},"responses":{"201":{"description":"Application Withdrawn","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/jobApplicationDetailed"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/job/application/withdraw',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {jobId: '1'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/j/chart/application":{"get":{"summary":"Get application pie chart","tags":["Job"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"number"},"status":{"type":"object","properties":{"applied":{"type":"number"},"shortlisted":{"type":"number"},"interview":{"type":"number"},"offer":{"type":"number"}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/j/chart/application',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/j/chart/job-application":{"get":{"summary":"Get job application pie chart","tags":["Job"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"number"},"status":{"type":"object","properties":{"applied":{"type":"number"},"shortlisted":{"type":"number"},"interview":{"type":"number"},"offer":{"type":"number"}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/j/chart/job-application',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/application/all-jobs?limit={limit}&&offset={skip}&search={searchString}&sort={first_name:asc}&status={status}&startDate={lowerDate}&endDate={upperDate}":{"get":{"summary":"Get all Applicantions for an Employer","tags":["Application"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"status","in":"query","required":false,"schema":{"type":"string","enum":["applied","shortlisted","interview","closed","offer","hired"]}},{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["first_name:asc","first_name:desc","last_name:asc","last_name:desc","application_date:asc","application_date:desc","status:asc","status:desc"]}},{"name":"startDate","in":"query","required":false,"schema":{"type":"string","example":"2020-02-25"}},{"name":"endDate","in":"query","required":false,"schema":{"type":"string","example":"2021-02-25"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"count":{"type":"number"},"applications":{"type":"array","items":null,"$ref":"#/components/schemas/applicationsWithApplicant"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/application/all-jobs',\n  qs: {\n    status: '{status}',\n    sort: '{first_name:asc}',\n    startDate: '{lowerDate}',\n    endDate: '{upperDate}',\n    limit: '{limit}',\n    offset: '{skip}',\n    search: '{searchString}'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/application/all/{jobId}?limit={limit}&&offset={skip}&search={searchString}&sort={first_name:asc}&startDate={lowerDate}&endDate={upperDate}":{"get":{"summary":"Get all Applicants","tags":["Application"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"status","in":"query","required":false,"schema":{"type":"string","enum":["applied","shortlisted","interview","closed","offer","hired"]}},{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["first_name:asc","first_name:desc","last_name:asc","last_name:desc","application_date:asc","application_date:desc","status:asc","status:desc"]}},{"name":"startDate","in":"query","required":false,"schema":{"type":"string","example":"2020-02-25"}},{"name":"endDate","in":"query","required":false,"schema":{"type":"string","example":"2021-02-25"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"count":{"type":"number"},"applications":{"type":"array","items":null,"$ref":"#/components/schemas/applicationsWithApplicant"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/application/all/%7BjobId%7D',\n  qs: {\n    status: 'SOME_STRING_VALUE',\n    sort: '{first_name:asc}',\n    startDate: '{lowerDate}',\n    endDate: '{upperDate}',\n    limit: '{limit}',\n    offset: '{skip}',\n    search: '{searchString}'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/application/applicant/{jobId}/{userId}":{"get":{"summary":"Get Applicant's profile","tags":["Application"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","allOf":[{"$ref":"#/components/schemas/jobFullDetailed"},{"$ref":"#/components/schemas/User"}],"properties":{"applicationId":{"type":"number"},"applicationDate":{"type":"string"},"status":{"type":"string"},"mentorId":{"type":"number"},"companyName":{"type":"string"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/application/applicant/%7BjobId%7D/%7BuserId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/access/share-application/{applicationId}":{"get":{"summary":"Get Application Access Records","tags":["Access"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"applicationId","in":"path","description":"applicationId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"accessRecords":{"type":"array","items":{"$ref":"#/components/schemas/applicationShared"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/access/share-application/%7BapplicationId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]},"post":{"summary":"Share Application","tags":["Access"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"accessLevel":{"type":"string","enum":["viewer","administrator"]},"userId":{"type":"string","example":"182"}}}}}},"responses":{"201":{"description":"Application shared","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/applicationShared"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/job/access/share-application/%7BapplicationId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {accessLevel: 'viewer', userId: '182'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]},"patch":{"summary":"Update Shared Application","tags":["Access"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"applicationId","in":"path","description":"applicationId","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"accessLevel":{"type":"string","enum":["viewer","administrator"]},"userId":{"type":"string","example":"182"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/applicationShared"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/job/access/share-application/%7BapplicationId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {accessLevel: 'viewer', userId: '182'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]},"delete":{"summary":"Delete Application Access Records","tags":["Access"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"applicationId","in":"path","description":"applicationId","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"userId":{"type":"string","example":"182"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","example":"Access record deleted"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'http://localhost:4585/em/api/v1/job/access/share-application/%7BapplicationId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {userId: '182'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/application/status/{applicationId}":{"patch":{"summary":"Update application status","tags":["Application"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"applicationId","in":"path","description":"id of application","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","enum":["shortlisted","interview","closed","offer","hired"]}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/jobApplication"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/job/application/status/%7BapplicationId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {status: 'shortlisted'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/onboarding/all?limit={limit}&offset={skip}&sort={sort}&search={searchTEXT}":{"get":{"summary":"Get all onboardings","tags":["Onboarding"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["first_name:asc","first_name:desc","last_name:asc","last_name:desc"]}},{"name":"search","in":"query","description":"It searches on first name, last name and email","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"count":{"type":"number"},"onboardings":{"type":"array","items":{"$ref":"#/components/schemas/onboardingFullDetails"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/onboarding/all',\n  qs: {sort: '{sort}', search: '{searchTEXT}', limit: '{limit}', offset: '{skip}'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/onboarding/details/{onboardingId}":{"get":{"summary":"Get onboarding details","tags":["Onboarding"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"onboardingId","in":"path","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/onboardingFullDetails"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/onboarding/details/%7BonboardingId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/onboarding/tasks/{onboardingId}":{"get":{"summary":"Get all onboarding tasks","tags":["Onboarding"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"onboardingId","in":"path","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"[task type]":{"type":"object","properties":{"[task subType]":{"type":"array","items":{"$ref":"#/components/schemas/onboardingTaskFullDetails"}},"general":{"type":"array","items":{"$ref":"#/components/schemas/onboardingTaskFullDetails"}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/onboarding/tasks/%7BonboardingId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/onboarding/task-status/{onboardingtaskId}":{"patch":{"summary":"Update the status of an onboarding task","tags":["Onboarding"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"onboardingtaskId","in":"path","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","enum":["ongoing","complete","not applicable"]}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/OnboardingTask"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/job/onboarding/task-status/%7BonboardingtaskId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {status: 'ongoing'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/j/talents-and-applicants?limit={limit}&&offset={skip}&search={searchString}&type={type}&sort={first_name:asc}":{"get":{"summary":"Get all recommended talents and applicants","tags":["Job"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"type","in":"query","required":false,"schema":{"type":"string","enum":["applicant","talent"]}},{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["first_name:asc","first_name:desc","last_name:asc","last_name:desc"]}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string"},"count":{"type":"number"},"users":{"type":"array","items":{"type":"object","allOf":[{"$ref":"#/components/schemas/User"}],"properties":{"jobsApplied":{"type":"array","items":{"type":"object","properties":{"userId":{"type":"number"},"applicationId":{"type":"number"},"jobId":{"type":"number"},"jobName":{"type":"string"}}}}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/j/talents-and-applicants',\n  qs: {\n    type: '{type}',\n    sort: '{first_name:asc}',\n    limit: '{limit}',\n    offset: '{skip}',\n    search: '{searchString}'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/j/talents/{jobId}?limit={limit}&&offset={skip}&search={searchString}&sort={first_name:asc}":{"get":{"summary":"Get all recommended talents","tags":["Job"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["first_name:asc","first_name:desc","last_name:asc","last_name:desc","score:asc","score:desc"]}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/paginatedUsers"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/j/talents/%7BjobId%7D',\n  qs: {\n    sort: '{first_name:asc}',\n    limit: '{limit}',\n    offset: '{skip}',\n    search: '{searchString}'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/job/j/talent/{userId}":{"get":{"summary":"Get Talent User's profile","tags":["Job"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/User"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/job/j/talent/%7BuserId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/email/templates/default":{"get":{"summary":"Get All Default Email Templates","tags":["Email"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"emailTemplates":{"type":"array","items":{"$ref":"#/components/schemas/Emailtemplate"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/email/templates/default',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/email/templates/custom":{"get":{"summary":"Get All Custom Email Templates","tags":["Email"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"emailTemplates":{"type":"array","items":{"$ref":"#/components/schemas/Emailtemplate"}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/email/templates/custom',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/email/template/{templateId}":{"get":{"summary":"Get Email Template Info","tags":["Email"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"templateId","in":"path","description":"Id of the email template","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/Emailtemplate"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/email/template/%7BtemplateId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]},"patch":{"summary":"Maintain custom email templates","tags":["Email"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"templateId","in":"path","description":"Id of the email template","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","enum":["active","inactive"]},"subject":{"type":"string"},"desc":{"type":"string"},"displayName":{"type":"string"},"emailBody":{"type":"string"},"emailFooter":{"type":"string"},"productName":{"type":"string"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/Emailtemplate"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/email/template/%7BtemplateId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {\n    status: 'active',\n    subject: 'string',\n    desc: 'string',\n    displayName: 'string',\n    emailBody: 'string',\n    emailFooter: 'string',\n    productName: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/email/send-email":{"post":{"summary":"Send email to anyone from Employer","tags":["Email"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string"},"subject":{"type":"string"},"emailBody":{"type":"string"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","example":"Email successfully sent!"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/email/send-email',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {email: 'string', subject: 'string', emailBody: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/mentor/mentor-candidate/{applicationId}":{"post":{"summary":"Mentor Candidate Linking","tags":["Mentor"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"applicationId","in":"path","description":"id of application","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"mentorId":{"type":"number"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/mentorCandidateMapping"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/mentor/mentor-candidate/%7BapplicationId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {mentorId: 0},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/mentor/mentor-candidate/me?search={searchTEXT}&sort=first_name:asc":{"get":{"summary":"Get One Mentor's (my own) Candidates","tags":["Mentor"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["first_name:asc","first_name:desc","last_name:asc","last_name:desc","created_at:asc","created_at:desc"]}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"candidates":{"type":"array","items":{"type":"object","allOf":[{"$ref":"#/components/schemas/User"}],"properties":{"mentorcandidatemappingId":{"type":"number"},"mentorId":{"type":"number"}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/mentor/mentor-candidate/me',\n  qs: {sort: 'first_name:asc', search: '{searchTEXT}'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/mentor/mentor-candidate/{candidateId}":{"delete":{"summary":"Delete mentor-candidate mapping Record","tags":["Mentor"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"candidateId","in":"path","description":"id of candidate","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","example":"Record deletion successful!"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'http://localhost:4585/em/api/v1/mentor/mentor-candidate/%7BcandidateId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/mentor/mentor-candidates/all":{"get":{"summary":"Get All Mentors' Candidates","tags":["Mentor"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"mentors":{"type":"array","items":{"type":"object","properties":{"userId":{"type":"number"},"email":{"type":"string"},"firstName":{"type":"string"},"candidates":{"type":"array","items":{"type":"object","properties":{"userId":{"type":"number"},"email":{"type":"string"},"firstName":{"type":"string"}}}}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/mentor/mentor-candidates/all',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/mentor/replace-mentor/all/{oldMentorId}":{"patch":{"summary":"Replace Mentor for all","tags":["Mentor"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"oldMentorId","in":"path","description":"id of old mentor whom to replace","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"mentorId":{"type":"number"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"candidates":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string","example":"Mentor replacing successful!"}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/mentor/replace-mentor/all/%7BoldMentorId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {mentorId: 0},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/mentor/replace-mentor/one/{candidateId}":{"patch":{"summary":"Replace Mentor for one","tags":["Mentor"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"oldMentorId","in":"path","description":"id of candidate whose to replace","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"mentorId":{"type":"number"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"candidates":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string","example":"Mentor replacing successful!"}}}}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/mentor/replace-mentor/one/%7BcandidateId%7D',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {mentorId: 0},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/mentor/all-applications?limit={limit}&&offset={skip}&search={searchString}&sort={first_name:asc}&status={status}&startDate={lowerDate}&endDate={upperDate}":{"get":{"summary":"Get all Applicantions for a Mentor","tags":["Mentor"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"status","in":"query","required":false,"schema":{"type":"string","enum":["applied","shortlisted","interview","closed","offer","hired"]}},{"name":"sort","in":"query","required":false,"schema":{"type":"string","enum":["first_name:asc","first_name:desc","last_name:asc","last_name:desc","application_date:asc","application_date:desc","status:asc","status:desc"]}},{"name":"startDate","in":"query","required":false,"schema":{"type":"string","example":"2020-02-25"}},{"name":"endDate","in":"query","required":false,"schema":{"type":"string","example":"2021-02-25"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"count":{"type":"number"},"applications":{"type":"array","items":null,"$ref":"#/components/schemas/applicationsWithApplicant"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/mentor/all-applications',\n  qs: {\n    status: '{status}',\n    sort: '{first_name:asc}',\n    startDate: '{lowerDate}',\n    endDate: '{upperDate}',\n    limit: '{limit}',\n    offset: '{skip}',\n    search: '{searchString}'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/mentor/mentee/{jobId}/{userId}":{"get":{"summary":"Get Mentor Applicant's profile","tags":["Mentor"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","allOf":[{"$ref":"#/components/schemas/jobFullDetailed"},{"$ref":"#/components/schemas/User"}],"properties":{"applicationId":{"type":"number"},"applicationDate":{"type":"string"},"status":{"type":"string"},"mentorId":{"type":"number"},"companyName":{"type":"string"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/mentor/mentee/%7BjobId%7D/%7BuserId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/nylas/n/token":{"post":{"summary":"Request for Nylas Token","description":"It requests for a Nylas Token","tags":["Nylas"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token":{"type":"string"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/CronofyRecord"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/nylas/n/token',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {token: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/nylas/user-calendars":{"get":{"summary":"Get User Calenders","description":"It gets the latest User Calendar","tags":["Nylas"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"calendars":{"type":"array","items":[{"$ref":"#/components/schemas/CronofyRecord"}]}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/nylas/user-calendars',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/nylas/refresh-user-calendars":{"get":{"summary":"Refresh User Calenders","description":"It refreshes the User Calendar","tags":["Nylas"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/CronofyRecord"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/nylas/refresh-user-calendars',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/nylas/revoke-account":{"post":{"summary":"Revoke Nylas Token","description":"It revokes the Nylas Token","tags":["Nylas"],"security":[{"bearerAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"accountId":{"type":"string"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","example":"Successfully revoked account"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/nylas/revoke-account',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {accountId: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}}},"components":{"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}},"schemas":{"User":{"type":"object","properties":{"userId":{"type":"number"},"useruuid":{"type":"number"},"email":{"type":"string"},"allowSendEmail":{"type":"boolean"},"inTalentPool":{"type":"boolean"},"privacyClause":{"type":"boolean"},"tandc":{"type":"boolean"},"userTypeId":{"type":"number"},"roleId":{"type":"number"},"active":{"type":"boolean"},"companyId":{"type":"number"},"companyUuid":{"type":"number"},"firstName":{"type":"string"},"lastName":{"type":"string"},"picture":{"type":"string"},"isAdmin":{"type":"boolean"},"tzid":{"type":"number"},"primaryMobile":{"type":"string"},"roleName":{"type":"string"},"userTypeName":{"type":"string"},"lastLoggedInAt":{"type":"string"}}},"Company":{"type":"object","description":"This is company information.","properties":{"companyId":{"type":"number"},"companyUuid":{"type":"number"},"companyName":{"type":"string"},"displayName":{"type":"string"},"countryId":{"type":"number"},"website":{"type":"string"},"description":{"type":"string"},"supervisorRandR":{"type":"string"},"workbuddyRandR":{"type":"string"},"leadershipMessage":{"type":"string"},"active":{"type":"boolean"},"isCompanyOnboardingComplete":{"type":"boolean"},"noOfEmployees":{"type":"number"},"foundedYear":{"type":"number"},"companyIndustryId":{"type":"number"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"}}},"CompanyFullDetails":{"type":"object","description":"This extends the Company model and provides more information.","allOf":[{"$ref":"#/components/schemas/Company"}],"properties":{"logo":{"type":"string"},"banner":{"type":"string"},"emailBg":{"type":"string"},"companyIndustryName":{"type":"string"}}},"CompanyWorkAccommodation":{"type":"object","description":"This is CompanyWorkAccommodationRecord.","properties":{"companyWorkaccommodationId":{"type":"number"},"workaccommodationId":{"type":"number"},"companyId":{"type":"number"},"status":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"}}},"Question":{"type":"object","properties":{"questionId":{"type":"string"},"questioName":{"type":"string"},"questionConfig":{"$ref":"#/components/schemas/questionConfig"},"questionTypeName":{"type":"string","enum":["scale5","scale10","subjective","single_choice","multiple_choice","yes_no","integer"]}}},"questionConfig":{"type":"object","properties":{"desc":{"type":"string","description":"Detailed Question descriptions","nullable":true},"options":{"type":"array","items":{"type":"object","description":"Options for Multiple choice/single choice questions","properties":{"optionId":{"type":"number"},"optionName":{"type":"string"}}}}}},"answers":{"type":"object","properties":{"questionId":{"type":"number"},"answer":{"oneOf":[{"type":"number","description":"For scale/integer/single choice questions"},{"type":"string","description":"For free text questions"},{"type":"array","description":"For multiple choice questions","items":{"type":"number"}}]},"timeTaken":{"type":"number"}}},"job":{"type":"object","properties":{"jobName":{"type":"string"},"jobDescription":{"type":"string"},"jobIndustryId":{"type":"number"},"jobFunctionId":{"type":"number"},"jobTypeId":{"type":"number"},"jobLocationId":{"type":"number"},"jobskillIds":{"type":"array","items":{"type":"number"}},"minExp":{"type":"number"},"duration":{"type":"number"},"closeDate":{"type":"string","example":"2027-12-27"},"isPrivate":{"type":"boolean"},"isDeleted":{"type":"boolean"},"deletedAt":{"type":"string"}}},"jobDetailed":{"type":"object","description":"This extends the job model and provides more information.","allOf":[{"$ref":"#/components/schemas/job"}],"properties":{"jobId":{"type":"number"},"jobUuid":{"type":"string"},"companyId":{"type":"number"},"userId":{"type":"number","description":"ID of user who created the job"},"active":{"type":"boolean"},"isPrivate":{"type":"boolean"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"}}},"jobFullDetailed":{"type":"object","description":"This extends the job model and provides more information.","allOf":[{"$ref":"#/components/schemas/job"},{"$ref":"#/components/schemas/jobDetailed"}],"properties":{"companyName":{"type":"string"},"logo":{"type":"string"},"jobTypeName":{"type":"string"},"jobIndustryName":{"type":"string"},"jobFunctionName":{"type":"string"},"jobLocationName":{"type":"string"}}},"recruiterJobDetails":{"type":"object","description":"This extends the job full details and provides more information.","allOf":[{"$ref":"#/components/schemas/jobFullDetailed"}],"properties":{"accessLevel":{"type":"string"}}},"candidateJobDetails":{"type":"object","description":"This extends the job full details and provides more information.","allOf":[{"$ref":"#/components/schemas/jobFullDetailed"}],"properties":{"score":{"type":"number","example":0.9},"isApplied":{"type":"boolean"},"jobSkills":{"type":"array","items":{"type":"string"}}}},"jobApplication":{"type":"object","properties":{"applicationId":{"type":"number"},"jobId":{"type":"number"},"isApplied":{"type":"boolean"},"isWithdrawn":{"type":"boolean"},"status":{"type":"string"}}},"jobApplicationDetailed":{"type":"object","description":"This extends detailed jobs to include applications","allOf":[{"$ref":"#/components/schemas/jobApplication"},{"$ref":"#/components/schemas/jobFullDetailed"}],"properties":{"applicantId":{"type":"number"},"applicationDate":{"type":"string"},"creatorId":{"type":"number"}}},"Onboarding":{"type":"object","description":"This is the details of onboarding records","properties":{"onboardingId":{"type":"number"},"onboardee":{"type":"number"},"onboarder":{"type":"number"},"status":{"type":"string"},"companyId":{"type":"number"},"jobId":{"type":"number"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"}}},"OnboardingFixedTask":{"type":"object","description":"This is the details of x0pa given default and fixed onboarding tasks","properties":{"onboardingfixedtaskId":{"type":"number"},"taskName":{"type":"string"},"taskDescription":{"type":"string"},"type":{"type":"string"},"subType":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"}}},"OnboardingTask":{"type":"object","description":"This is the records of onboarding tasks with statuses (based on each onboarding of a company)","properties":{"onboardingtaskId":{"type":"number"},"onboardingId":{"type":"number"},"taskId":{"type":"number"},"asignee":{"type":"number"},"status":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"}}},"onboardingTaskFullDetails":{"type":"object","description":"This extends the details of onboarding records","allOf":[{"$ref":"#/components/schemas/OnboardingFixedTask"},{"$ref":"#/components/schemas/OnboardingTask"}],"properties":{"jobName":{"type":"string"},"jobLocationName":{"type":"string"},"onboarder":{"type":"number"},"onboardee":{"type":"number"}}},"onboardingFullDetails":{"type":"object","description":"This extends the details of onboarding records","allOf":[{"$ref":"#/components/schemas/Onboarding"},{"$ref":"#/components/schemas/User"}],"properties":{"jobName":{"type":"string"},"jobLocationName":{"type":"string"}}},"jobFullDetailsWithQuesRes":{"type":"object","description":"This extends the job model and provides more information.","allOf":[{"$ref":"#/components/schemas/jobFullDetailed"}],"properties":{"isQuestionnaireComplete":{"type":"boolean"},"isApplied":{"type":"boolean"},"jobSkills":{"type":"array","items":{"type":"string"}},"jobQuestionResponses":{"type":"array","items":{"$ref":"#/components/schemas/answers"}}}},"paginatedUsers":{"type":"object","description":"This is the schema for paginated users' response.","properties":{"count":{"type":"number"},"users":{"type":"array","items":{"type":"object","allOf":[{"$ref":"#/components/schemas/User"}],"properties":{"score":{"type":"number","example":0.9}}}}}},"paginatedAllJobs":{"type":"object","description":"This is the schema for paginated jobs' response.","properties":{"count":{"type":"number"},"jobs":{"type":"array","items":{"$ref":"#/components/schemas/candidateJobDetails"}}}},"paginatedRecruiterJobs":{"type":"object","description":"This is the schema for paginated jobs' response.","properties":{"count":{"type":"number"},"jobs":{"type":"array","items":{"type":"object","allOf":[{"$ref":"#/components/schemas/recruiterJobDetails"}],"properties":{"isQuestionnaireComplete":{"type":"boolean"}}}}}},"jobShared":{"type":"object","description":"This is the schema for job shared response","properties":{"accessLevel":{"type":"string","enum":["viewer","administrator"]},"userId":{"type":"string"},"jobId":{"type":"string"},"jobHireMemberId":{"type":"string"},"scopes":{"type":"json"}}},"applicationShared":{"type":"object","description":"This is the schema for application shared response","properties":{"accessLevel":{"type":"string","enum":["viewer","administrator"]},"userId":{"type":"string"},"applicationId":{"type":"string"},"applicationHireMemberId":{"type":"string"},"scopes":{"type":"json"}}},"applicationsWithApplicant":{"type":"object","description":"This is the schema for paginated all applicants profiles' response.","allOf":[{"$ref":"#/components/schemas/jobApplication"},{"$ref":"#/components/schemas/User"}]},"companyUser":{"type":"object","description":"This is the schema for company user","allOf":[{"$ref":"#/components/schemas/User"}],"properties":{"companyName":{"type":"string"}}},"meta":{"type":"object","description":"This is the schema for user's meta data.","properties":{"umetaId":{"type":"string"},"userId":{"type":"string"},"metaKey":{"type":"string"},"metaValue":{"type":"string"}}},"allMeta":{"type":"object","description":"This is the schema for user's all meta data.","properties":{"metaKey":{"type":"string","example":"metaValue"},"metaKey1":{"type":"string","example":"metaValue1"},"metaKey2":{"type":"string","example":"metaValue2"}}},"mentorCandidateMapping":{"type":"object","description":"This is the schema for mentorCandidateMapping data.","properties":{"mentorCandidateMappingId":{"type":"number"},"mentorId":{"type":"number"},"candidateId":{"type":"number"}}},"Emailtemplate":{"type":"object","description":"This is the schema for Emailtemplate data.","properties":{"id":{"type":"number"},"companyId":{"type":"number"},"ownerId":{"type":"number"},"templateName":{"type":"string"},"desc":{"type":"string"},"status":{"type":"string","enum":["active","inactive"]},"subject":{"type":"string"},"displayName":{"type":"string"},"emailBody":{"type":"string"},"emailFooter":{"type":"string"},"productName":{"type":"string"},"html":{"type":"string"},"text":{"type":"string"},"emailVars":{"type":"json"},"isUserTemplate":{"type":"boolean"},"isDefaultTemplate":{"type":"boolean"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"}}},"CronofyRecord":{"type":"object","description":"This is the Cronofy Calendar Record for a user.","properties":{"id":{"type":"number"},"userId":{"type":"number"},"accountId":{"type":"number"},"accountName":{"type":"string"},"accountEmail":{"type":"string"},"linkingProfile":{"type":"json"},"defaultTzid":{"type":"string"},"sub":{"type":"string"},"calender":{"type":"json"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"}}},"Resource":{"type":"object","description":"This is the Resource Record for a user.","properties":{"resourceId":{"type":"number"},"courseTitle":{"type":"string"},"topic":{"type":"string"},"mode":{"type":"string"},"countryId":{"type":"string"},"usertype":{"type":"array","items":{"type":"number"}},"url":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"}}}}}}
