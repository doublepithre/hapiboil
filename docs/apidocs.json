{"openapi":"3.0.0","info":{"version":"1.0.0","title":"Empauwer Backend API documenations","description":"# Introduction\nThis API is documented in **OpenAPI format**. \\\nSee https://redocly.github.io/redoc/ for more information.\n"},"servers":[{"url":"http://localhost:4585/em/api/v1","description":"Local development"},{"url":"https://empstag.x0pa.ai/em/api/v1/","description":"Staging environment"}],"tags":[{"name":"User","description":"Information about the user"}],"paths":{"/account":{"post":{"summary":"Create User","tags":["User"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string","example":"me@mymail.com"},"password":{"type":"string","example":"password"},"accountType":{"type":"string","enum":["candidate","employer","mentor"]}}}}}},"responses":{"201":{"description":"User successfully created","content":{"application/json":{"schema":{"type":"object","properties":{"userUuid":{"type":"string"},"userId":{"type":"number"},"email":{"type":"string"}}}}}},"400":{"description":"Failed to create user","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"boolean"},"message":{"description":"Describes reason for failure","type":"string"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/account',\n  headers: {'content-type': 'application/json'},\n  body: {email: 'me@mymail.com', password: 'password', accountType: 'candidate'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/login":{"post":{"summary":"Login user","tags":["User"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string","example":"me@mymail.com"},"password":{"type":"string","example":"password"}}}}}},"responses":{"200":{"description":"Successful login","content":{"application/json":{"schema":{"type":"object","properties":{"User":{"$ref":"#/components/schemas/User"},"token":{"type":"string","description":"JWT to be used for authorization"}}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:4585/em/api/v1/login',\n  headers: {'content-type': 'application/json'},\n  body: {email: 'me@mymail.com', password: 'password'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/me":{"get":{"summary":"Get user info","security":[{"bearerAuth":[]}],"tags":["User"],"responses":{"200":{"description":"Successfully get user information","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/User"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:4585/em/api/v1/account/me',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}},"/account/{userUuid}/":{"patch":{"summary":"Update user info","security":[{"bearerAuth":[]}],"tags":["User"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"active":{"type":"boolean","nullable":true},"firstName":{"type":"string","nullable":true},"lastName":{"type":"string","nullable":true},"isAdmin":{"type":"boolean","nullable":true},"tzid":{"type":"number","nullable":true},"primaryMobile":{"type":"string","nullable":true},"roleId":{"type":"number","nullable":true}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://localhost:4585/em/api/v1/account/%7BuserUuid%7D/',\n  headers: {\n    'content-type': 'application/json',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {\n    active: true,\n    firstName: 'string',\n    lastName: 'string',\n    isAdmin: true,\n    tzid: 0,\n    primaryMobile: 'string',\n    roleId: 0\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"}]}}},"components":{"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}},"schemas":{"User":{"type":"object","properties":{"userId":{"type":"number"},"useruuid":{"type":"number"},"email":{"type":"string"},"roleId":{"type":"number"},"active":{"type":"boolean"},"companyId":{"type":"number"},"companyUuid":{"type":"number"},"firstName":{"type":"string"},"lastName":{"type":"string"},"picture":{"type":"string"},"isAdmin":{"type":"boolean"},"tzid":{"type":"number"},"primaryMobile":{"type":"string"}}}}}}
